const { environment } = require('./gulpfile.babel.js/env/transform');

const globals = Object.keys(environment).reduce((acc, name) => ({ ...acc, [name]: true }), {
  wp: true,
  ga: true,
  process: true,
});

module.exports = {
  root: true,
  parser: '@typescript-eslint/parser',
  plugins: ['import', 'prettier', 'sonarjs', 'smells', 'clean-regex'],
  extends: [
    'eslint:recommended',
    'plugin:@typescript-eslint/eslint-recommended',
    'plugin:@typescript-eslint/recommended',
    'plugin:import/errors',
    'plugin:import/warnings',
    'plugin:import/typescript',
    'plugin:sonarjs/recommended',
    'plugin:clean-regex/recommended',
    'prettier',
  ],
  env: {
    es6: true,
    node: true,
    jest: true,
    jquery: true,
    browser: true,
    commonjs: true,
  },
  parserOptions: {
    project: './tsconfig.json',
    sourceType: 'module',
    ecmaVersion: 2018,
    ecmaFeatures: {
      modules: true,
    },
  },
  globals,
  settings: {
    'import/resolver': {
      node: {
        extensions: ['.js', '.jsx', '.ts', '.tsx', '.json'],
        moduleDirectory: ['node_modules', 'src/'],
      },
    },
  },
  rules: {
    'smells/no-switch': 1,
    'smells/no-setinterval': 1,
    'smells/no-complex-chaining': 0,
    'smells/no-complex-switch-case': 1,
    'smells/no-this-assign': 1,
    'sonarjs/cognitive-complexity': 'error',
    'sonarjs/no-identical-expressions': 'error',
    'prettier/prettier': ['error', {}, { usePrettierrc: true }],
    yoda: [1, 'never'],
    curly: [1, 'all'],
    eqeqeq: [1, 'smart'],
    quotes: [1, 'single'],
    radix: 1,
    strict: 0,
    indent: [1, 2, { SwitchCase: 1 }],
    camelcase: [1, { properties: 'always' }],
    'brace-style': [1, '1tbs'],
    'comma-spacing': [1, { before: false, after: true }],
    'comma-style': [1, 'last'],
    'consistent-return': 0,
    'default-case': 1,
    'dot-notation': [1, { allowKeywords: true }],
    'eol-last': 1,
    'guard-for-in': 1,
    'key-spacing': [1, { beforeColon: false, afterColon: true }],
    'new-cap': 0,
    'new-parens': 1,
    'no-alert': 0,
    'no-array-constructor': 1,
    'no-caller': 1,
    'no-debugger': 0,
    'no-delete-var': 1,
    'no-eval': 0,
    'no-extra-bind': 1,
    'no-fallthrough': 1,
    'no-floating-decimal': 1,
    'no-implied-eval': 1,
    'no-invalid-this': 1,
    'no-iterator': 1,
    'no-label-var': 1,
    'no-labels': 1,
    'no-lone-blocks': 1,
    'no-loop-func': 1,
    'no-mixed-spaces-and-tabs': [1, false],
    'no-multi-spaces': 1,
    'no-multi-str': 1,
    'no-native-reassign': 1,
    'no-nested-ternary': 1,
    'no-new-func': 1,
    'no-new-object': 1,
    'no-new-wrappers': 1,
    'no-octal': 1,
    'no-octal-escape': 1,
    'no-process-exit': 1,
    'no-proto': 1,
    'no-redeclare': 1,
    'no-return-assign': 1,
    'no-script-url': 1,
    'no-sequences': 1,
    'no-shadow': 1,
    'no-shadow-restricted-names': 1,
    'no-spaced-func': 1,
    'no-trailing-spaces': 1,
    'no-undef': 1,
    'no-undef-init': 1,
    'no-undefined': 0,
    'no-unused-expressions': 1,
    'no-unused-vars': 'off',
    '@typescript-eslint/no-unused-vars': [2, { args: 'none' }],
    '@typescript-eslint/no-non-null-assertion': 'off',
    'no-use-before-define': 1,
    'no-with': 1,
    'no-extra-semi': 1,
    'semi-spacing': [1, { before: false, after: true }],
    'keyword-spacing': 1,
    'space-before-blocks': [1, 'always'],
    'space-before-function-paren': [0, { anonymous: 'always', named: 'never' }],
    'space-infix-ops': 1,
    'space-unary-ops': [1, { words: true, nonwords: false }],
    'spaced-comment': [1, 'always', { exceptions: ['-'] }],
    'valid-jsdoc': [0, { requireReturnDescription: false, requireReturn: false }],
    'wrap-iife': [1, 'inside'],

    // Previously on by default in node environment
    'no-catch-shadow': 0,
    'no-console': 0,
    'no-mixed-requires': 1,
    'no-new-require': 1,
    'no-path-concat': 1,
    'global-strict': [0, 'always'],
    'handle-callback-err': [1, 'err'],

    // ES6
    'arrow-spacing': [1, { before: true, after: true }],
    'constructor-super': 1,
    'no-confusing-arrow': 1,
    'no-class-assign': 1,
    'no-const-assign': 1,
    'no-dupe-class-members': 1,
    'no-this-before-super': 1,
    'prefer-arrow-callback': 0,
    'prefer-template': 0,
    'require-yield': 1,
    'no-var': 1,
  },
  overrides: [
    {
      files: ['public/*.js', 'gulpfile.babel.js'],
      rules: {
        'no-var': 0,
      },
    },
  ],
};
